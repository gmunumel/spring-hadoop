#!/bin/sh
# ----------------------------------------------------------------------------
#  Copyright 2001-2006 The Apache Software Foundation.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ----------------------------------------------------------------------------
#
#   Copyright (c) 2001-2006 The Apache Software Foundation.  All rights
#   reserved.


# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

PRGDIR=`dirname "$PRG"`
BASEDIR=`cd "$PRGDIR/.." >/dev/null; pwd`



# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
           if [ -z "$JAVA_HOME" ] ; then
             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
           fi
           ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly." 1>&2
  echo "  We cannot execute $JAVACMD" 1>&2
  exit 1
fi

if [ -z "$REPO" ]
then
  REPO="$BASEDIR"/repo
fi

CLASSPATH=$CLASSPATH_PREFIX:"$BASEDIR"/etc:"$REPO"/spring-data-hadoop-2.2.0.RELEASE.jar:"$REPO"/spring-data-hadoop-hbase-2.2.0.RELEASE.jar:"$REPO"/hadoop-yarn-common-2.6.0.jar:"$REPO"/hadoop-yarn-api-2.6.0.jar:"$REPO"/jaxb-api-2.2.2.jar:"$REPO"/stax-api-1.0-2.jar:"$REPO"/activation-1.1.jar:"$REPO"/jersey-client-1.9.jar:"$REPO"/guice-servlet-3.0.jar:"$REPO"/guice-3.0.jar:"$REPO"/javax.inject-1.jar:"$REPO"/jersey-guice-1.9.jar:"$REPO"/hadoop-distcp-2.6.0.jar:"$REPO"/hadoop-hdfs-2.6.0.jar:"$REPO"/commons-daemon-1.0.13.jar:"$REPO"/xercesImpl-2.9.1.jar:"$REPO"/hadoop-mapreduce-client-core-2.6.0.jar:"$REPO"/hadoop-streaming-2.6.0.jar:"$REPO"/hadoop-mapreduce-client-jobclient-2.6.0.jar:"$REPO"/hadoop-mapreduce-client-common-2.6.0.jar:"$REPO"/hadoop-yarn-client-2.6.0.jar:"$REPO"/hadoop-yarn-server-common-2.6.0.jar:"$REPO"/hadoop-mapreduce-client-shuffle-2.6.0.jar:"$REPO"/hadoop-yarn-server-nodemanager-2.6.0.jar:"$REPO"/leveldbjni-all-1.8.jar:"$REPO"/spring-data-hadoop-pig-2.2.0.RELEASE.jar:"$REPO"/spring-batch-core-3.0.4.RELEASE.jar:"$REPO"/com.ibm.jbatch-tck-spi-1.0.jar:"$REPO"/javax.batch-api-1.0.jar:"$REPO"/xstream-1.4.7.jar:"$REPO"/xmlpull-1.1.3.1.jar:"$REPO"/xpp3_min-1.1.4c.jar:"$REPO"/spring-batch-infrastructure-3.0.4.RELEASE.jar:"$REPO"/spring-retry-1.1.0.RELEASE.jar:"$REPO"/spring-data-hadoop-batch-2.2.0.RELEASE.jar:"$REPO"/spring-data-hadoop-hive-2.2.0.RELEASE.jar:"$REPO"/spring-jdbc-4.1.6.RELEASE.jar:"$REPO"/spring-data-hadoop-core-2.2.0.RELEASE.jar:"$REPO"/spring-tx-4.1.6.RELEASE.jar:"$REPO"/hadoop-common-2.6.0.jar:"$REPO"/hadoop-annotations-2.6.0.jar:"$REPO"/guava-11.0.2.jar:"$REPO"/commons-cli-1.2.jar:"$REPO"/commons-math3-3.1.1.jar:"$REPO"/xmlenc-0.52.jar:"$REPO"/commons-httpclient-3.1.jar:"$REPO"/commons-codec-1.4.jar:"$REPO"/commons-io-2.4.jar:"$REPO"/commons-net-3.1.jar:"$REPO"/commons-collections-3.2.1.jar:"$REPO"/servlet-api-2.5.jar:"$REPO"/jetty-6.1.26.jar:"$REPO"/jetty-util-6.1.26.jar:"$REPO"/jersey-core-1.9.jar:"$REPO"/jersey-json-1.9.jar:"$REPO"/jettison-1.1.jar:"$REPO"/jaxb-impl-2.2.3-1.jar:"$REPO"/jackson-jaxrs-1.8.3.jar:"$REPO"/jackson-xc-1.8.3.jar:"$REPO"/jersey-server-1.9.jar:"$REPO"/jasper-compiler-5.5.23.jar:"$REPO"/jasper-runtime-5.5.23.jar:"$REPO"/jsp-api-2.1.jar:"$REPO"/commons-el-1.0.jar:"$REPO"/commons-logging-1.1.3.jar:"$REPO"/jets3t-0.9.0.jar:"$REPO"/httpclient-4.1.2.jar:"$REPO"/httpcore-4.1.2.jar:"$REPO"/java-xmlbuilder-0.4.jar:"$REPO"/commons-lang-2.6.jar:"$REPO"/commons-configuration-1.6.jar:"$REPO"/commons-digester-1.8.jar:"$REPO"/commons-beanutils-1.7.0.jar:"$REPO"/commons-beanutils-core-1.8.0.jar:"$REPO"/jackson-core-asl-1.9.13.jar:"$REPO"/jackson-mapper-asl-1.9.13.jar:"$REPO"/avro-1.7.4.jar:"$REPO"/paranamer-2.3.jar:"$REPO"/snappy-java-1.0.4.1.jar:"$REPO"/protobuf-java-2.5.0.jar:"$REPO"/gson-2.2.4.jar:"$REPO"/hadoop-auth-2.6.0.jar:"$REPO"/apacheds-kerberos-codec-2.0.0-M15.jar:"$REPO"/apacheds-i18n-2.0.0-M15.jar:"$REPO"/api-asn1-api-1.0.0-M20.jar:"$REPO"/api-util-1.0.0-M20.jar:"$REPO"/curator-framework-2.6.0.jar:"$REPO"/jsch-0.1.42.jar:"$REPO"/curator-client-2.6.0.jar:"$REPO"/curator-recipes-2.6.0.jar:"$REPO"/jsr305-1.3.9.jar:"$REPO"/htrace-core-3.0.4.jar:"$REPO"/zookeeper-3.4.6.jar:"$REPO"/netty-3.7.0.Final.jar:"$REPO"/commons-compress-1.4.1.jar:"$REPO"/xz-1.0.jar:"$REPO"/groovy-1.8.5.jar:"$REPO"/antlr-2.7.7.jar:"$REPO"/asm-3.2.jar:"$REPO"/asm-commons-3.2.jar:"$REPO"/asm-util-3.2.jar:"$REPO"/asm-analysis-3.2.jar:"$REPO"/asm-tree-3.2.jar:"$REPO"/spring-core-4.1.6.RELEASE.jar:"$REPO"/spring-beans-4.1.6.RELEASE.jar:"$REPO"/spring-context-4.1.6.RELEASE.jar:"$REPO"/spring-expression-4.1.6.RELEASE.jar:"$REPO"/spring-aop-4.1.6.RELEASE.jar:"$REPO"/aopalliance-1.0.jar:"$REPO"/slf4j-api-1.7.6.jar:"$REPO"/jcl-over-slf4j-1.7.6.jar:"$REPO"/slf4j-log4j12-1.7.6.jar:"$REPO"/log4j-1.2.17.jar:"$REPO"/spring-hadoop-samples-batch-mr-1.0.0.BUILD-SNAPSHOT.jar
EXTRA_JVM_ARGUMENTS="-Xms512m -Xmx1024m"

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
  [ -n "$HOME" ] && HOME=`cygpath --path --windows "$HOME"`
  [ -n "$BASEDIR" ] && BASEDIR=`cygpath --path --windows "$BASEDIR"`
  [ -n "$REPO" ] && REPO=`cygpath --path --windows "$REPO"`
fi

exec "$JAVACMD" $JAVA_OPTS \
  $EXTRA_JVM_ARGUMENTS \
  -classpath "$CLASSPATH" \
  -Dapp.name="mrBatchApp" \
  -Dapp.pid="$$" \
  -Dapp.repo="$REPO" \
  -Dapp.home="$BASEDIR" \
  -Dbasedir="$BASEDIR" \
  org.springframework.samples.hadoop.mapreduce.MrBatchApp \
  "$@"
